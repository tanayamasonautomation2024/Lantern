name: Stoneberry - Run Mason Automation Tests and Publish Report
run-name: Mason Stoneberry all scenarios

on:
  push:
    branches: [ main, master, Stoneberry-stg ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Mason Stoneberry all scenarios
    runs-on: self-hosted   # Specify 'self-hosted' instead of 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk
          echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" | sudo tee -a /etc/environment
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          echo "JAVA_HOME set to $JAVA_HOME"
          java -version  # Optional: Verify Java installation

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Install Allure Playwright
        run: npm i -D @playwright/test allure-playwright

      # Install system dependencies for Chromium (skipping libasound2)
      - name: Install system dependencies for Chromium
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            wget \
            ca-certificates \
            fonts-liberation \
            libappindicator3-1 \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libcups2 \
            libdbus-1-3 \
            libgdk-pixbuf2.0-0 \
            libnspr4 \
            libnss3 \
            libx11-xcb1 \
            libxcomposite1 \
            libxrandr2 \
            xdg-utils \
            xvfb  # Install Xvfb for headless display

      # Set up Xvfb for headless Chromium display (if needed)
      - name: Set up Xvfb for headless display
        run: |
          Xvfb :99 -screen 0 1280x1024x24 &
          export DISPLAY=:99

      - name: Clear cache and free disk space
        run: |
          sudo rm -rf /tmp/*
          sudo rm -rf /home/runner/work/_temp/*
          sudo rm -rf /home/runner/_work/_temp/*
          sudo rm -rf /home/runner/_work/_tool/*
          sudo rm -rf /home/runner/_work/_actions/*
        continue-on-error: true

      # Run Playwright tests (no need for --headless as it's the default)
      - name: Run Playwright tests
        run: npx playwright test --reporter=line,allure-playwright 
      # Generate allure report (always runs, even if tests fail)
      - name: Generate allure report
        if: always()
        run: |
          npm install -D allure-commandline --save-dev
          npx allure generate ./allure-results --clean -o allure-report


      - name: Publish test reports
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report
          destination_dir: stoneberry_stg_scenarios
